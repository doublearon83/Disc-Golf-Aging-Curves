#Upload and clean age data
MPO_a<-read.csv("C:/Users/ahoward1/Documents/Disc golf analytics/Aging curves/Ages.csv",header=T,sep=",")
MPO_a<-read.csv("Ages.csv",header=T,sep=",")
#read in outFd for PDGA numbers
outFd<-read.csv("C:/Users/ahoward1/Documents/Disc golf analytics/outFd.csv", sep=",", header=T)
MPO_ar <- read.csv("MPO_ar.csv",header=T)
head(MPO_ar)
str(outFd)
unique(outFd)
unique(outFd$year)
head(MPO_ar)
#import data
data_nc19 <- read.csv("data_nc19.csv",header=T)
data_nc <- read.csv("data_nc.csv",header=T)
data_nc_comb <- rbind(data_nc19[,c(2,19:25)],data_nc[,c(2,23:29)])
head(data_nc_comb)
clustd<-data_nc_comb
str(clustd)
str(data_nc19)
data_nc_comb <- rbind(data_nc19[,c(3,19:25)],data_nc[,c(3,23:29)])
clustd<-data_nc_comb
str(clustd)
clustd[clustd$Name=="Bradley Williams",]
fhz<-tapply(clustd$Fairway.Hitsz,clustd$Name,mean,na.rm=T)
c1z<-tapply(clustd$Circle.1z,clustd$Name,mean,na.rm=T)
c2z<-tapply(clustd$Circle.2z,clustd$Name,mean,na.rm=T)
sz<-tapply(clustd$Scramblez,clustd$Name,mean,na.rm=T)
c1pz<-tapply(clustd$Circle.1.Puttingz,clustd$Name,mean,na.rm=T)
c2pz<-tapply(clustd$Circle.2.Puttingz,clustd$Name,mean,na.rm=T)
obz<-tapply(clustd$OBz,clustd$Name,mean,na.rm=T)
str(data_nc)
str(data_nc19)
data_nc_comb <- rbind(data_nc19[,c(3,19:26)],data_nc[,c(3,23:30)])
clustd<-data_nc_comb
fhz<-tapply(clustd$Fairway.Hitsz,clustd$Name,mean,na.rm=T)
c1z<-tapply(clustd$Circle.1z,clustd$Name,mean,na.rm=T)
c2z<-tapply(clustd$Circle.2z,clustd$Name,mean,na.rm=T)
sz<-tapply(clustd$Scramblez,clustd$Name,mean,na.rm=T)
c1pz<-tapply(clustd$Circle.1.Puttingz,clustd$Name,mean,na.rm=T)
c2pz<-tapply(clustd$Circle.2.Puttingz,clustd$Name,mean,na.rm=T)
obz<-tapply(clustd$OBz,clustd$Name,mean,na.rm=T)
names<-names(fhz)
clustdm<-data.frame(fhz,c1z,c2z,sz,c1pz,c2pz,obz,names)
clustdm<-clustdm[table(data_nc_comb$Name)>5,] #removing players who played fewer than 5 events
clustdm<-clustdm[complete.cases(clustdm),]
#number of clusters (classes or player types)
nc <- c(2:6)
str(clustdm)
####################
###GMM clustering###
####################
require(ClusterR)
#finding number of classes
opt_gmm = Optimal_Clusters_GMM(clustdm[,1:7], max_clusters = 10, criterion = "BIC",
dist_mode = "maha_dist", seed_mode = "random_subset",
km_iter = 10, em_iter = 10, var_floor = 1e-10,
plot_data = T)
#generate predictions for 2-6 classes
nc <- c(2:6)
clss <- as.data.frame(matrix(0,nrow=nrow(clustdm),ncol=length(nc)))
for (i in 1:length(nc)) {
#generating classes
gmm = GMM(clustdm[,1:7], nc[i], dist_mode = "maha_dist", seed_mode = "random_subset", km_iter = 10,
em_iter = 10, verbose = F)
#predicting class
pr = predict_GMM(clustdm[,1:7], gmm$centroids, gmm$covariance_matrices, gmm$weights)
#creating vector of class predictions
clss[,i] <- pr$cluster_labels
names(clss)[i] <- paste("nc",nc[i],sep="")
}
#plotting GMM results
require(ggplot2)
ggplot(clustdm, aes(x=c1z, y = c1pz, color = factor(cluster_labels))) + geom_point(size=3)
ggplot(clustdm, aes(x=c1z, y = c1pz, color = factor(cluster_labels))) + geom_point(size=3)
str(clustdm)
nc <- c(2:6)
clss <- as.data.frame(matrix(0,nrow=nrow(clustdm),ncol=length(nc)))
for (i in 1:length(nc)) {
#generating classes
gmm = GMM(clustdm[,1:7], nc[i], dist_mode = "maha_dist", seed_mode = "random_subset", km_iter = 10,
em_iter = 10, verbose = F)
#predicting class
pr = predict_GMM(clustdm[,1:7], gmm$centroids, gmm$covariance_matrices, gmm$weights)
#creating vector of class predictions
clss[,i] <- pr$cluster_labels
names(clss)[i] <- paste("nc",nc[i],sep="")
}
str(clss)
pr$cluster_labels
opt_gmm = Optimal_Clusters_GMM(clustdm[,1:7], max_clusters = 10, criterion = "BIC",
dist_mode = "maha_dist", seed_mode = "random_subset",
km_iter = 10, em_iter = 10, var_floor = 1e-10,
plot_data = T)
